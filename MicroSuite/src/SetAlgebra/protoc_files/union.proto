syntax = "proto3";

import "google/protobuf/descriptor.proto";

package union_service;

service UnionService {
    // Defining service between load generator and union.
    // Input: Queries, number of nearest neighbors to compute.
    // Output: K-nn
    rpc Union (UnionRequest) returns (UnionResponse) {}
}

message UtilRequest {
    bool util_request = 1;
}

message UnionRequest {
    repeated uint64 word_ids = 1;
    UtilRequest util_request = 2;
    bool last_request = 3;
    uint64 resp_time = 4;
    bool kill = 5;
    uint64 request_id = 6;
    uint32 load = 7;
}

message Util {
    uint64 user_time = 1;
    uint64 system_time = 2;
    uint64 io_time = 3;
    uint64 idle_time = 4;
}

message UtilResponse {
    bool util_present = 1;
    repeated Util intersection_srv_util = 2;
    Util union_util = 3;
}

message UnionResponse {
    repeated uint64 doc_ids = 1;
    uint64 create_union_req_time = 2;
    uint64 unpack_union_req_time = 3;
    uint64 update_union_util_time = 4;
    uint64 get_intersection_srv_responses_time = 5;
    uint64 create_intersection_srv_req_time = 6;
    uint64 unpack_intersection_srv_resp_time = 7;
    uint64 unpack_intersection_srv_req_time = 8;
    uint64 calculate_intersection_time = 9;
    uint64 pack_intersection_srv_resp_time = 10;
    uint64 calculate_union_time = 11;
    uint64 pack_union_resp_time = 12;
    uint32 number_of_intersection_servers = 13;
    UtilResponse util_response = 14;
    uint64 resp_time = 15;
    uint64 union_time = 16;
    uint64 start_stamp = 17;
    uint64 end_stamp = 18;
    uint64 request_id = 19;
    uint64 num_inline = 20;
    uint64 num_workers = 21;
    uint64 num_resp = 22; 
    bool kill_ack = 23;
}
