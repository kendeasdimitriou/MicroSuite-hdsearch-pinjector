syntax = "proto3";

package intersection;

service IntersectionService{
    rpc Intersection(IntersectionRequest) returns (IntersectionResponse) {}
}


message UtilRequest {
    bool util_request = 1;
}

message IntersectionRequest {
    repeated uint64 word_ids = 1;
    uint32 intersection_server_id = 2;
    uint32 shard_size = 3;
    UtilRequest util_request = 4;
    uint64 request_id = 5;
    uint64 index_view = 6;
}

message TimingDataInMicro {
    uint64 unpack_intersection_srv_req_time_in_micro = 1;
    uint64 calculate_intersection_time_in_micro = 2;
    uint64 pack_intersection_srv_resp_time_in_micro = 3;
    float cpu_util = 4;
}

message UtilResponse {
    bool util_present = 1;
    uint64 user_time = 2;
    uint64 system_time = 3;
    uint64 io_time = 4;
    uint64 idle_time = 5;
}

message IntersectionResponse {
    repeated uint64 doc_ids = 1;
    TimingDataInMicro timing_data_in_micro = 2;
    UtilResponse util_response = 3;
    uint64 request_id = 4;
    uint64 recv_stamp = 5;
    uint64 send_stamp = 6;
    uint64 index_view = 7;
    uint32 request_server_id = 8;
}

