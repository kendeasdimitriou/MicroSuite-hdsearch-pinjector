// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lookup.proto

#ifndef PROTOBUF_lookup_2eproto__INCLUDED
#define PROTOBUF_lookup_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace lookup {
class Key;
class KeyDefaultTypeInternal;
extern KeyDefaultTypeInternal _Key_default_instance_;
class TimingDataInMicro;
class TimingDataInMicroDefaultTypeInternal;
extern TimingDataInMicroDefaultTypeInternal _TimingDataInMicro_default_instance_;
class UtilRequest;
class UtilRequestDefaultTypeInternal;
extern UtilRequestDefaultTypeInternal _UtilRequest_default_instance_;
class UtilResponse;
class UtilResponseDefaultTypeInternal;
extern UtilResponseDefaultTypeInternal _UtilResponse_default_instance_;
class Value;
class ValueDefaultTypeInternal;
extern ValueDefaultTypeInternal _Value_default_instance_;
}  // namespace lookup

namespace lookup {

namespace protobuf_lookup_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_lookup_2eproto

// ===================================================================

class UtilRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lookup.UtilRequest) */ {
 public:
  UtilRequest();
  virtual ~UtilRequest();

  UtilRequest(const UtilRequest& from);

  inline UtilRequest& operator=(const UtilRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UtilRequest& default_instance();

  static inline const UtilRequest* internal_default_instance() {
    return reinterpret_cast<const UtilRequest*>(
               &_UtilRequest_default_instance_);
  }

  void Swap(UtilRequest* other);

  // implements Message ----------------------------------------------

  inline UtilRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  UtilRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UtilRequest& from);
  void MergeFrom(const UtilRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UtilRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool util_request = 1;
  void clear_util_request();
  static const int kUtilRequestFieldNumber = 1;
  bool util_request() const;
  void set_util_request(bool value);

  // @@protoc_insertion_point(class_scope:lookup.UtilRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool util_request_;
  mutable int _cached_size_;
  friend struct  protobuf_lookup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Key : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lookup.Key) */ {
 public:
  Key();
  virtual ~Key();

  Key(const Key& from);

  inline Key& operator=(const Key& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Key& default_instance();

  static inline const Key* internal_default_instance() {
    return reinterpret_cast<const Key*>(
               &_Key_default_instance_);
  }

  void Swap(Key* other);

  // implements Message ----------------------------------------------

  inline Key* New() const PROTOBUF_FINAL { return New(NULL); }

  Key* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Key& from);
  void MergeFrom(const Key& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Key* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string value = 3;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // .lookup.UtilRequest util_request = 4;
  bool has_util_request() const;
  void clear_util_request();
  static const int kUtilRequestFieldNumber = 4;
  const ::lookup::UtilRequest& util_request() const;
  ::lookup::UtilRequest* mutable_util_request();
  ::lookup::UtilRequest* release_util_request();
  void set_allocated_util_request(::lookup::UtilRequest* util_request);

  // uint32 operation = 1;
  void clear_operation();
  static const int kOperationFieldNumber = 1;
  ::google::protobuf::uint32 operation() const;
  void set_operation(::google::protobuf::uint32 value);

  // uint32 lookup_server_id = 7;
  void clear_lookup_server_id();
  static const int kLookupServerIdFieldNumber = 7;
  ::google::protobuf::uint32 lookup_server_id() const;
  void set_lookup_server_id(::google::protobuf::uint32 value);

  // uint64 request_id = 5;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 5;
  ::google::protobuf::uint64 request_id() const;
  void set_request_id(::google::protobuf::uint64 value);

  // uint64 index_view = 6;
  void clear_index_view();
  static const int kIndexViewFieldNumber = 6;
  ::google::protobuf::uint64 index_view() const;
  void set_index_view(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:lookup.Key)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::lookup::UtilRequest* util_request_;
  ::google::protobuf::uint32 operation_;
  ::google::protobuf::uint32 lookup_server_id_;
  ::google::protobuf::uint64 request_id_;
  ::google::protobuf::uint64 index_view_;
  mutable int _cached_size_;
  friend struct  protobuf_lookup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TimingDataInMicro : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lookup.TimingDataInMicro) */ {
 public:
  TimingDataInMicro();
  virtual ~TimingDataInMicro();

  TimingDataInMicro(const TimingDataInMicro& from);

  inline TimingDataInMicro& operator=(const TimingDataInMicro& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TimingDataInMicro& default_instance();

  static inline const TimingDataInMicro* internal_default_instance() {
    return reinterpret_cast<const TimingDataInMicro*>(
               &_TimingDataInMicro_default_instance_);
  }

  void Swap(TimingDataInMicro* other);

  // implements Message ----------------------------------------------

  inline TimingDataInMicro* New() const PROTOBUF_FINAL { return New(NULL); }

  TimingDataInMicro* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TimingDataInMicro& from);
  void MergeFrom(const TimingDataInMicro& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TimingDataInMicro* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 unpack_lookup_srv_req_time_in_micro = 1;
  void clear_unpack_lookup_srv_req_time_in_micro();
  static const int kUnpackLookupSrvReqTimeInMicroFieldNumber = 1;
  ::google::protobuf::uint64 unpack_lookup_srv_req_time_in_micro() const;
  void set_unpack_lookup_srv_req_time_in_micro(::google::protobuf::uint64 value);

  // uint64 lookup_srv_time_in_micro = 2;
  void clear_lookup_srv_time_in_micro();
  static const int kLookupSrvTimeInMicroFieldNumber = 2;
  ::google::protobuf::uint64 lookup_srv_time_in_micro() const;
  void set_lookup_srv_time_in_micro(::google::protobuf::uint64 value);

  // uint64 pack_lookup_srv_resp_time_in_micro = 3;
  void clear_pack_lookup_srv_resp_time_in_micro();
  static const int kPackLookupSrvRespTimeInMicroFieldNumber = 3;
  ::google::protobuf::uint64 pack_lookup_srv_resp_time_in_micro() const;
  void set_pack_lookup_srv_resp_time_in_micro(::google::protobuf::uint64 value);

  // float cpu_util = 4;
  void clear_cpu_util();
  static const int kCpuUtilFieldNumber = 4;
  float cpu_util() const;
  void set_cpu_util(float value);

  // @@protoc_insertion_point(class_scope:lookup.TimingDataInMicro)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 unpack_lookup_srv_req_time_in_micro_;
  ::google::protobuf::uint64 lookup_srv_time_in_micro_;
  ::google::protobuf::uint64 pack_lookup_srv_resp_time_in_micro_;
  float cpu_util_;
  mutable int _cached_size_;
  friend struct  protobuf_lookup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UtilResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lookup.UtilResponse) */ {
 public:
  UtilResponse();
  virtual ~UtilResponse();

  UtilResponse(const UtilResponse& from);

  inline UtilResponse& operator=(const UtilResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UtilResponse& default_instance();

  static inline const UtilResponse* internal_default_instance() {
    return reinterpret_cast<const UtilResponse*>(
               &_UtilResponse_default_instance_);
  }

  void Swap(UtilResponse* other);

  // implements Message ----------------------------------------------

  inline UtilResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  UtilResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UtilResponse& from);
  void MergeFrom(const UtilResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UtilResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 user_time = 2;
  void clear_user_time();
  static const int kUserTimeFieldNumber = 2;
  ::google::protobuf::uint64 user_time() const;
  void set_user_time(::google::protobuf::uint64 value);

  // uint64 system_time = 3;
  void clear_system_time();
  static const int kSystemTimeFieldNumber = 3;
  ::google::protobuf::uint64 system_time() const;
  void set_system_time(::google::protobuf::uint64 value);

  // uint64 io_time = 4;
  void clear_io_time();
  static const int kIoTimeFieldNumber = 4;
  ::google::protobuf::uint64 io_time() const;
  void set_io_time(::google::protobuf::uint64 value);

  // uint64 idle_time = 5;
  void clear_idle_time();
  static const int kIdleTimeFieldNumber = 5;
  ::google::protobuf::uint64 idle_time() const;
  void set_idle_time(::google::protobuf::uint64 value);

  // bool util_present = 1;
  void clear_util_present();
  static const int kUtilPresentFieldNumber = 1;
  bool util_present() const;
  void set_util_present(bool value);

  // @@protoc_insertion_point(class_scope:lookup.UtilResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 user_time_;
  ::google::protobuf::uint64 system_time_;
  ::google::protobuf::uint64 io_time_;
  ::google::protobuf::uint64 idle_time_;
  bool util_present_;
  mutable int _cached_size_;
  friend struct  protobuf_lookup_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Value : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lookup.Value) */ {
 public:
  Value();
  virtual ~Value();

  Value(const Value& from);

  inline Value& operator=(const Value& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Value& default_instance();

  static inline const Value* internal_default_instance() {
    return reinterpret_cast<const Value*>(
               &_Value_default_instance_);
  }

  void Swap(Value* other);

  // implements Message ----------------------------------------------

  inline Value* New() const PROTOBUF_FINAL { return New(NULL); }

  Value* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Value& from);
  void MergeFrom(const Value& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Value* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // .lookup.TimingDataInMicro timing_data_in_micro = 2;
  bool has_timing_data_in_micro() const;
  void clear_timing_data_in_micro();
  static const int kTimingDataInMicroFieldNumber = 2;
  const ::lookup::TimingDataInMicro& timing_data_in_micro() const;
  ::lookup::TimingDataInMicro* mutable_timing_data_in_micro();
  ::lookup::TimingDataInMicro* release_timing_data_in_micro();
  void set_allocated_timing_data_in_micro(::lookup::TimingDataInMicro* timing_data_in_micro);

  // .lookup.UtilResponse util_response = 3;
  bool has_util_response() const;
  void clear_util_response();
  static const int kUtilResponseFieldNumber = 3;
  const ::lookup::UtilResponse& util_response() const;
  ::lookup::UtilResponse* mutable_util_response();
  ::lookup::UtilResponse* release_util_response();
  void set_allocated_util_response(::lookup::UtilResponse* util_response);

  // uint64 request_id = 4;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 4;
  ::google::protobuf::uint64 request_id() const;
  void set_request_id(::google::protobuf::uint64 value);

  // uint64 recv_stamp = 5;
  void clear_recv_stamp();
  static const int kRecvStampFieldNumber = 5;
  ::google::protobuf::uint64 recv_stamp() const;
  void set_recv_stamp(::google::protobuf::uint64 value);

  // uint64 send_stamp = 6;
  void clear_send_stamp();
  static const int kSendStampFieldNumber = 6;
  ::google::protobuf::uint64 send_stamp() const;
  void set_send_stamp(::google::protobuf::uint64 value);

  // uint64 index_view = 7;
  void clear_index_view();
  static const int kIndexViewFieldNumber = 7;
  ::google::protobuf::uint64 index_view() const;
  void set_index_view(::google::protobuf::uint64 value);

  // uint32 bucket_server_id = 8;
  void clear_bucket_server_id();
  static const int kBucketServerIdFieldNumber = 8;
  ::google::protobuf::uint32 bucket_server_id() const;
  void set_bucket_server_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:lookup.Value)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::lookup::TimingDataInMicro* timing_data_in_micro_;
  ::lookup::UtilResponse* util_response_;
  ::google::protobuf::uint64 request_id_;
  ::google::protobuf::uint64 recv_stamp_;
  ::google::protobuf::uint64 send_stamp_;
  ::google::protobuf::uint64 index_view_;
  ::google::protobuf::uint32 bucket_server_id_;
  mutable int _cached_size_;
  friend struct  protobuf_lookup_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// UtilRequest

// bool util_request = 1;
inline void UtilRequest::clear_util_request() {
  util_request_ = false;
}
inline bool UtilRequest::util_request() const {
  // @@protoc_insertion_point(field_get:lookup.UtilRequest.util_request)
  return util_request_;
}
inline void UtilRequest::set_util_request(bool value) {
  
  util_request_ = value;
  // @@protoc_insertion_point(field_set:lookup.UtilRequest.util_request)
}

// -------------------------------------------------------------------

// Key

// uint32 operation = 1;
inline void Key::clear_operation() {
  operation_ = 0u;
}
inline ::google::protobuf::uint32 Key::operation() const {
  // @@protoc_insertion_point(field_get:lookup.Key.operation)
  return operation_;
}
inline void Key::set_operation(::google::protobuf::uint32 value) {
  
  operation_ = value;
  // @@protoc_insertion_point(field_set:lookup.Key.operation)
}

// string key = 2;
inline void Key::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Key::key() const {
  // @@protoc_insertion_point(field_get:lookup.Key.key)
  return key_.GetNoArena();
}
inline void Key::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lookup.Key.key)
}
#if LANG_CXX11
inline void Key::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:lookup.Key.key)
}
#endif
inline void Key::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lookup.Key.key)
}
inline void Key::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lookup.Key.key)
}
inline ::std::string* Key::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:lookup.Key.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Key::release_key() {
  // @@protoc_insertion_point(field_release:lookup.Key.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Key::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:lookup.Key.key)
}

// string value = 3;
inline void Key::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Key::value() const {
  // @@protoc_insertion_point(field_get:lookup.Key.value)
  return value_.GetNoArena();
}
inline void Key::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lookup.Key.value)
}
#if LANG_CXX11
inline void Key::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:lookup.Key.value)
}
#endif
inline void Key::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lookup.Key.value)
}
inline void Key::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lookup.Key.value)
}
inline ::std::string* Key::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:lookup.Key.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Key::release_value() {
  // @@protoc_insertion_point(field_release:lookup.Key.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Key::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:lookup.Key.value)
}

// .lookup.UtilRequest util_request = 4;
inline bool Key::has_util_request() const {
  return this != internal_default_instance() && util_request_ != NULL;
}
inline void Key::clear_util_request() {
  if (GetArenaNoVirtual() == NULL && util_request_ != NULL) delete util_request_;
  util_request_ = NULL;
}
inline const ::lookup::UtilRequest& Key::util_request() const {
  // @@protoc_insertion_point(field_get:lookup.Key.util_request)
  return util_request_ != NULL ? *util_request_
                         : *::lookup::UtilRequest::internal_default_instance();
}
inline ::lookup::UtilRequest* Key::mutable_util_request() {
  
  if (util_request_ == NULL) {
    util_request_ = new ::lookup::UtilRequest;
  }
  // @@protoc_insertion_point(field_mutable:lookup.Key.util_request)
  return util_request_;
}
inline ::lookup::UtilRequest* Key::release_util_request() {
  // @@protoc_insertion_point(field_release:lookup.Key.util_request)
  
  ::lookup::UtilRequest* temp = util_request_;
  util_request_ = NULL;
  return temp;
}
inline void Key::set_allocated_util_request(::lookup::UtilRequest* util_request) {
  delete util_request_;
  util_request_ = util_request;
  if (util_request) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:lookup.Key.util_request)
}

// uint64 request_id = 5;
inline void Key::clear_request_id() {
  request_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Key::request_id() const {
  // @@protoc_insertion_point(field_get:lookup.Key.request_id)
  return request_id_;
}
inline void Key::set_request_id(::google::protobuf::uint64 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:lookup.Key.request_id)
}

// uint64 index_view = 6;
inline void Key::clear_index_view() {
  index_view_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Key::index_view() const {
  // @@protoc_insertion_point(field_get:lookup.Key.index_view)
  return index_view_;
}
inline void Key::set_index_view(::google::protobuf::uint64 value) {
  
  index_view_ = value;
  // @@protoc_insertion_point(field_set:lookup.Key.index_view)
}

// uint32 lookup_server_id = 7;
inline void Key::clear_lookup_server_id() {
  lookup_server_id_ = 0u;
}
inline ::google::protobuf::uint32 Key::lookup_server_id() const {
  // @@protoc_insertion_point(field_get:lookup.Key.lookup_server_id)
  return lookup_server_id_;
}
inline void Key::set_lookup_server_id(::google::protobuf::uint32 value) {
  
  lookup_server_id_ = value;
  // @@protoc_insertion_point(field_set:lookup.Key.lookup_server_id)
}

// -------------------------------------------------------------------

// TimingDataInMicro

// uint64 unpack_lookup_srv_req_time_in_micro = 1;
inline void TimingDataInMicro::clear_unpack_lookup_srv_req_time_in_micro() {
  unpack_lookup_srv_req_time_in_micro_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TimingDataInMicro::unpack_lookup_srv_req_time_in_micro() const {
  // @@protoc_insertion_point(field_get:lookup.TimingDataInMicro.unpack_lookup_srv_req_time_in_micro)
  return unpack_lookup_srv_req_time_in_micro_;
}
inline void TimingDataInMicro::set_unpack_lookup_srv_req_time_in_micro(::google::protobuf::uint64 value) {
  
  unpack_lookup_srv_req_time_in_micro_ = value;
  // @@protoc_insertion_point(field_set:lookup.TimingDataInMicro.unpack_lookup_srv_req_time_in_micro)
}

// uint64 lookup_srv_time_in_micro = 2;
inline void TimingDataInMicro::clear_lookup_srv_time_in_micro() {
  lookup_srv_time_in_micro_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TimingDataInMicro::lookup_srv_time_in_micro() const {
  // @@protoc_insertion_point(field_get:lookup.TimingDataInMicro.lookup_srv_time_in_micro)
  return lookup_srv_time_in_micro_;
}
inline void TimingDataInMicro::set_lookup_srv_time_in_micro(::google::protobuf::uint64 value) {
  
  lookup_srv_time_in_micro_ = value;
  // @@protoc_insertion_point(field_set:lookup.TimingDataInMicro.lookup_srv_time_in_micro)
}

// uint64 pack_lookup_srv_resp_time_in_micro = 3;
inline void TimingDataInMicro::clear_pack_lookup_srv_resp_time_in_micro() {
  pack_lookup_srv_resp_time_in_micro_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TimingDataInMicro::pack_lookup_srv_resp_time_in_micro() const {
  // @@protoc_insertion_point(field_get:lookup.TimingDataInMicro.pack_lookup_srv_resp_time_in_micro)
  return pack_lookup_srv_resp_time_in_micro_;
}
inline void TimingDataInMicro::set_pack_lookup_srv_resp_time_in_micro(::google::protobuf::uint64 value) {
  
  pack_lookup_srv_resp_time_in_micro_ = value;
  // @@protoc_insertion_point(field_set:lookup.TimingDataInMicro.pack_lookup_srv_resp_time_in_micro)
}

// float cpu_util = 4;
inline void TimingDataInMicro::clear_cpu_util() {
  cpu_util_ = 0;
}
inline float TimingDataInMicro::cpu_util() const {
  // @@protoc_insertion_point(field_get:lookup.TimingDataInMicro.cpu_util)
  return cpu_util_;
}
inline void TimingDataInMicro::set_cpu_util(float value) {
  
  cpu_util_ = value;
  // @@protoc_insertion_point(field_set:lookup.TimingDataInMicro.cpu_util)
}

// -------------------------------------------------------------------

// UtilResponse

// bool util_present = 1;
inline void UtilResponse::clear_util_present() {
  util_present_ = false;
}
inline bool UtilResponse::util_present() const {
  // @@protoc_insertion_point(field_get:lookup.UtilResponse.util_present)
  return util_present_;
}
inline void UtilResponse::set_util_present(bool value) {
  
  util_present_ = value;
  // @@protoc_insertion_point(field_set:lookup.UtilResponse.util_present)
}

// uint64 user_time = 2;
inline void UtilResponse::clear_user_time() {
  user_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UtilResponse::user_time() const {
  // @@protoc_insertion_point(field_get:lookup.UtilResponse.user_time)
  return user_time_;
}
inline void UtilResponse::set_user_time(::google::protobuf::uint64 value) {
  
  user_time_ = value;
  // @@protoc_insertion_point(field_set:lookup.UtilResponse.user_time)
}

// uint64 system_time = 3;
inline void UtilResponse::clear_system_time() {
  system_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UtilResponse::system_time() const {
  // @@protoc_insertion_point(field_get:lookup.UtilResponse.system_time)
  return system_time_;
}
inline void UtilResponse::set_system_time(::google::protobuf::uint64 value) {
  
  system_time_ = value;
  // @@protoc_insertion_point(field_set:lookup.UtilResponse.system_time)
}

// uint64 io_time = 4;
inline void UtilResponse::clear_io_time() {
  io_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UtilResponse::io_time() const {
  // @@protoc_insertion_point(field_get:lookup.UtilResponse.io_time)
  return io_time_;
}
inline void UtilResponse::set_io_time(::google::protobuf::uint64 value) {
  
  io_time_ = value;
  // @@protoc_insertion_point(field_set:lookup.UtilResponse.io_time)
}

// uint64 idle_time = 5;
inline void UtilResponse::clear_idle_time() {
  idle_time_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UtilResponse::idle_time() const {
  // @@protoc_insertion_point(field_get:lookup.UtilResponse.idle_time)
  return idle_time_;
}
inline void UtilResponse::set_idle_time(::google::protobuf::uint64 value) {
  
  idle_time_ = value;
  // @@protoc_insertion_point(field_set:lookup.UtilResponse.idle_time)
}

// -------------------------------------------------------------------

// Value

// string value = 1;
inline void Value::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Value::value() const {
  // @@protoc_insertion_point(field_get:lookup.Value.value)
  return value_.GetNoArena();
}
inline void Value::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:lookup.Value.value)
}
#if LANG_CXX11
inline void Value::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:lookup.Value.value)
}
#endif
inline void Value::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:lookup.Value.value)
}
inline void Value::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:lookup.Value.value)
}
inline ::std::string* Value::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:lookup.Value.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Value::release_value() {
  // @@protoc_insertion_point(field_release:lookup.Value.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Value::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:lookup.Value.value)
}

// .lookup.TimingDataInMicro timing_data_in_micro = 2;
inline bool Value::has_timing_data_in_micro() const {
  return this != internal_default_instance() && timing_data_in_micro_ != NULL;
}
inline void Value::clear_timing_data_in_micro() {
  if (GetArenaNoVirtual() == NULL && timing_data_in_micro_ != NULL) delete timing_data_in_micro_;
  timing_data_in_micro_ = NULL;
}
inline const ::lookup::TimingDataInMicro& Value::timing_data_in_micro() const {
  // @@protoc_insertion_point(field_get:lookup.Value.timing_data_in_micro)
  return timing_data_in_micro_ != NULL ? *timing_data_in_micro_
                         : *::lookup::TimingDataInMicro::internal_default_instance();
}
inline ::lookup::TimingDataInMicro* Value::mutable_timing_data_in_micro() {
  
  if (timing_data_in_micro_ == NULL) {
    timing_data_in_micro_ = new ::lookup::TimingDataInMicro;
  }
  // @@protoc_insertion_point(field_mutable:lookup.Value.timing_data_in_micro)
  return timing_data_in_micro_;
}
inline ::lookup::TimingDataInMicro* Value::release_timing_data_in_micro() {
  // @@protoc_insertion_point(field_release:lookup.Value.timing_data_in_micro)
  
  ::lookup::TimingDataInMicro* temp = timing_data_in_micro_;
  timing_data_in_micro_ = NULL;
  return temp;
}
inline void Value::set_allocated_timing_data_in_micro(::lookup::TimingDataInMicro* timing_data_in_micro) {
  delete timing_data_in_micro_;
  timing_data_in_micro_ = timing_data_in_micro;
  if (timing_data_in_micro) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:lookup.Value.timing_data_in_micro)
}

// .lookup.UtilResponse util_response = 3;
inline bool Value::has_util_response() const {
  return this != internal_default_instance() && util_response_ != NULL;
}
inline void Value::clear_util_response() {
  if (GetArenaNoVirtual() == NULL && util_response_ != NULL) delete util_response_;
  util_response_ = NULL;
}
inline const ::lookup::UtilResponse& Value::util_response() const {
  // @@protoc_insertion_point(field_get:lookup.Value.util_response)
  return util_response_ != NULL ? *util_response_
                         : *::lookup::UtilResponse::internal_default_instance();
}
inline ::lookup::UtilResponse* Value::mutable_util_response() {
  
  if (util_response_ == NULL) {
    util_response_ = new ::lookup::UtilResponse;
  }
  // @@protoc_insertion_point(field_mutable:lookup.Value.util_response)
  return util_response_;
}
inline ::lookup::UtilResponse* Value::release_util_response() {
  // @@protoc_insertion_point(field_release:lookup.Value.util_response)
  
  ::lookup::UtilResponse* temp = util_response_;
  util_response_ = NULL;
  return temp;
}
inline void Value::set_allocated_util_response(::lookup::UtilResponse* util_response) {
  delete util_response_;
  util_response_ = util_response;
  if (util_response) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:lookup.Value.util_response)
}

// uint64 request_id = 4;
inline void Value::clear_request_id() {
  request_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Value::request_id() const {
  // @@protoc_insertion_point(field_get:lookup.Value.request_id)
  return request_id_;
}
inline void Value::set_request_id(::google::protobuf::uint64 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:lookup.Value.request_id)
}

// uint64 recv_stamp = 5;
inline void Value::clear_recv_stamp() {
  recv_stamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Value::recv_stamp() const {
  // @@protoc_insertion_point(field_get:lookup.Value.recv_stamp)
  return recv_stamp_;
}
inline void Value::set_recv_stamp(::google::protobuf::uint64 value) {
  
  recv_stamp_ = value;
  // @@protoc_insertion_point(field_set:lookup.Value.recv_stamp)
}

// uint64 send_stamp = 6;
inline void Value::clear_send_stamp() {
  send_stamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Value::send_stamp() const {
  // @@protoc_insertion_point(field_get:lookup.Value.send_stamp)
  return send_stamp_;
}
inline void Value::set_send_stamp(::google::protobuf::uint64 value) {
  
  send_stamp_ = value;
  // @@protoc_insertion_point(field_set:lookup.Value.send_stamp)
}

// uint64 index_view = 7;
inline void Value::clear_index_view() {
  index_view_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Value::index_view() const {
  // @@protoc_insertion_point(field_get:lookup.Value.index_view)
  return index_view_;
}
inline void Value::set_index_view(::google::protobuf::uint64 value) {
  
  index_view_ = value;
  // @@protoc_insertion_point(field_set:lookup.Value.index_view)
}

// uint32 bucket_server_id = 8;
inline void Value::clear_bucket_server_id() {
  bucket_server_id_ = 0u;
}
inline ::google::protobuf::uint32 Value::bucket_server_id() const {
  // @@protoc_insertion_point(field_get:lookup.Value.bucket_server_id)
  return bucket_server_id_;
}
inline void Value::set_bucket_server_id(::google::protobuf::uint32 value) {
  
  bucket_server_id_ = value;
  // @@protoc_insertion_point(field_set:lookup.Value.bucket_server_id)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace lookup

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_lookup_2eproto__INCLUDED
